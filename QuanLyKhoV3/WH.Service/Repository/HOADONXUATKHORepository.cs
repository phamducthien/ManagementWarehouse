//------------------------------------------------------------------------------
// <auto-generated>
// Repository Generated
// </auto-generated>
//------------------------------------------------------------------------------
using Repository.Pattern.DataContext;
using Repository.Pattern.Ef6;
using Repository.Pattern.Repositories;
using Repository.Pattern.UnitOfWork;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using Util.Pattern;
using WH.Entity;

namespace WH.Service.Repository
{
    public partial interface IHOADONXUATKHORepository : IRepositoryAsync<HOADONXUATKHO>
    {
        bool Exist(string id);
        bool Exist(Expression<Func<HOADONXUATKHO, bool>> predicate);
        HOADONXUATKHO getObject(string id);
        HOADONXUATKHO getObject(Expression<Func<HOADONXUATKHO, bool>> predicate);


        HOADONXUATKHO CreateNew();
        HOADONXUATKHO CloneNew(HOADONXUATKHO objHOADONXUATKHO);
        HOADONXUATKHO CloneUpdate(HOADONXUATKHO objHOADONXUATKHO);
        HOADONXUATKHO Clone(HOADONXUATKHO objHOADONXUATKHO);

        List<HOADONXUATKHO> Clone(IList<HOADONXUATKHO> listHOADONXUATKHOs);
        string GetMaxCode();
        List<HOADONXUATKHO> Search(string textSearch);
        List<HOADONXUATKHO> Search(Expression<Func<HOADONXUATKHO, bool>> predicate);
        List<HOADONXUATKHO> Search(Expression<Func<HOADONXUATKHO, bool>> predicate, string textSearch);
    }

    public partial class HOADONXUATKHORepository : Repository<HOADONXUATKHO>, IHOADONXUATKHORepository
    {
        public string DefaultCode
        {
            get { return null; }
        }

        public HOADONXUATKHORepository(IDataContextAsync context, IUnitOfWorkAsync unitOfWork) : base(context, unitOfWork)
        {
        }

        public HOADONXUATKHORepository(IUnitOfWorkAsync unitOfWork)
                : base(unitOfWork)
        {
        }

        public bool Exist(string id)
        {
            return QueryableList().Any(p => p.IDUnit == id);
        }

        public bool Exist(Expression<Func<HOADONXUATKHO, bool>> predicate)
        {
            return Queryable().Any(predicate);
        }

        public HOADONXUATKHO CreateNew()
        {

            HOADONXUATKHO _obj = Create();

            //_obj.CA = null;//object
            _obj.MACA = null;////Nullable<int>
                             //_obj.KHACHHANG = null;//object
            _obj.MAKHACHHANG = null;////Nullable<System.Guid>
                                    //_obj.HOADONXUATKHOCHITIETs = null;//List
                                    //_obj.HOADONXUATKHOCHITIETs = new List<HOADONXUATKHOCHITIET>();//List
                                    //_obj.PHIEUTHUs = null;//List
                                    //_obj.PHIEUTHUs = new List<PHIEUTHU>();//List
                                    //Primary Key
            _obj.MAHOADONXUAT = DateTime.Now.ToString("ddMMyyyyHHmmssfff"); //string

            _obj.HANTHANHTOAN = null;//Nullable<System.DateTime>
            _obj.GHICHU_HD = string.Empty;//string
            _obj.DATHANHTOAN = null;//Nullable<bool>
            _obj.NGUOITAO = string.Empty;//string
            _obj.NGAYTAOHOADON = null;//Nullable<System.DateTime>
            _obj.ISDELETE = null;//Nullable<bool>
            return _obj;
        }

        public HOADONXUATKHO CloneNew(HOADONXUATKHO objHOADONXUATKHO)
        {
            if (objHOADONXUATKHO == null) return null;
            HOADONXUATKHO objNew = Find(objHOADONXUATKHO.MAHOADONXUAT);
            if (objNew != null) return null;

            objNew = CreateNew();
            objNew.MAHOADONXUAT = objHOADONXUATKHO.MAHOADONXUAT;
            objNew.THANHTIENCHUACK_HD = objHOADONXUATKHO.THANHTIENCHUACK_HD;
            objNew.TIENCHIETKHAU_HD = objHOADONXUATKHO.TIENCHIETKHAU_HD;
            objNew.TIENKHUYENMAI_HD = objHOADONXUATKHO.TIENKHUYENMAI_HD;
            objNew.SOTIENTHANHTOAN_HD = objHOADONXUATKHO.SOTIENTHANHTOAN_HD;
            objNew.SOTIENKHACHDUA_HD = objHOADONXUATKHO.SOTIENKHACHDUA_HD;
            objNew.LOAIHOADON = objHOADONXUATKHO.LOAIHOADON;
            objNew.HANTHANHTOAN = objHOADONXUATKHO.HANTHANHTOAN;
            objNew.GHICHU_HD = objHOADONXUATKHO.GHICHU_HD;
            objNew.DATHANHTOAN = objHOADONXUATKHO.DATHANHTOAN;
            objNew.NGUOITAO = objHOADONXUATKHO.NGUOITAO;
            objNew.NGAYTAOHOADON = objHOADONXUATKHO.NGAYTAOHOADON;
            objNew.ISDELETE = objHOADONXUATKHO.ISDELETE;
            objNew.MAKHACHHANG = objHOADONXUATKHO.MAKHACHHANG;
            objNew.MACA = objHOADONXUATKHO.MACA;
            objNew.isAdd = true;
            return objNew;
        }

        public HOADONXUATKHO CloneUpdate(HOADONXUATKHO objHOADONXUATKHO)
        {
            if (objHOADONXUATKHO == null) return null;
            HOADONXUATKHO objNew = Find(objHOADONXUATKHO.MAHOADONXUAT);
            if (objNew == null) return null;
            objNew.MAHOADONXUAT = objHOADONXUATKHO.MAHOADONXUAT;
            objNew.THANHTIENCHUACK_HD = objHOADONXUATKHO.THANHTIENCHUACK_HD;
            objNew.TIENCHIETKHAU_HD = objHOADONXUATKHO.TIENCHIETKHAU_HD;
            objNew.TIENKHUYENMAI_HD = objHOADONXUATKHO.TIENKHUYENMAI_HD;
            objNew.SOTIENTHANHTOAN_HD = objHOADONXUATKHO.SOTIENTHANHTOAN_HD;
            objNew.SOTIENKHACHDUA_HD = objHOADONXUATKHO.SOTIENKHACHDUA_HD;
            objNew.LOAIHOADON = objHOADONXUATKHO.LOAIHOADON;
            objNew.HANTHANHTOAN = objHOADONXUATKHO.HANTHANHTOAN;
            objNew.GHICHU_HD = objHOADONXUATKHO.GHICHU_HD;
            objNew.DATHANHTOAN = objHOADONXUATKHO.DATHANHTOAN;
            objNew.NGUOITAO = objHOADONXUATKHO.NGUOITAO;
            objNew.NGAYTAOHOADON = objHOADONXUATKHO.NGAYTAOHOADON;
            objNew.ISDELETE = objHOADONXUATKHO.ISDELETE;
            objNew.MAKHACHHANG = objHOADONXUATKHO.MAKHACHHANG;
            objNew.MACA = objHOADONXUATKHO.MACA;
            objNew.isUpdate = true;
            return objNew;
        }
        public HOADONXUATKHO Clone(HOADONXUATKHO objHOADONXUATKHO)
        {
            if (objHOADONXUATKHO == null) return null;
            HOADONXUATKHO objNew = Find(objHOADONXUATKHO.MAHOADONXUAT);
            if (objNew == null)
            {
                objNew = CreateNew();
                objNew.MAHOADONXUAT = objHOADONXUATKHO.MAHOADONXUAT;
                objNew.THANHTIENCHUACK_HD = objHOADONXUATKHO.THANHTIENCHUACK_HD;
                objNew.TIENCHIETKHAU_HD = objHOADONXUATKHO.TIENCHIETKHAU_HD;
                objNew.TIENKHUYENMAI_HD = objHOADONXUATKHO.TIENKHUYENMAI_HD;
                objNew.SOTIENTHANHTOAN_HD = objHOADONXUATKHO.SOTIENTHANHTOAN_HD;
                objNew.SOTIENKHACHDUA_HD = objHOADONXUATKHO.SOTIENKHACHDUA_HD;
                objNew.LOAIHOADON = objHOADONXUATKHO.LOAIHOADON;
                objNew.HANTHANHTOAN = objHOADONXUATKHO.HANTHANHTOAN;
                objNew.GHICHU_HD = objHOADONXUATKHO.GHICHU_HD;
                objNew.DATHANHTOAN = objHOADONXUATKHO.DATHANHTOAN;
                objNew.NGUOITAO = objHOADONXUATKHO.NGUOITAO;
                objNew.NGAYTAOHOADON = objHOADONXUATKHO.NGAYTAOHOADON;
                objNew.ISDELETE = objHOADONXUATKHO.ISDELETE;
                objNew.MAKHACHHANG = objHOADONXUATKHO.MAKHACHHANG;
                objNew.MACA = objHOADONXUATKHO.MACA;
                objNew.isAdd = true;
            }
            else
            {
                objNew.THANHTIENCHUACK_HD = objHOADONXUATKHO.THANHTIENCHUACK_HD;
                objNew.TIENCHIETKHAU_HD = objHOADONXUATKHO.TIENCHIETKHAU_HD;
                objNew.TIENKHUYENMAI_HD = objHOADONXUATKHO.TIENKHUYENMAI_HD;
                objNew.SOTIENTHANHTOAN_HD = objHOADONXUATKHO.SOTIENTHANHTOAN_HD;
                objNew.SOTIENKHACHDUA_HD = objHOADONXUATKHO.SOTIENKHACHDUA_HD;
                objNew.LOAIHOADON = objHOADONXUATKHO.LOAIHOADON;
                objNew.HANTHANHTOAN = objHOADONXUATKHO.HANTHANHTOAN;
                objNew.GHICHU_HD = objHOADONXUATKHO.GHICHU_HD;
                objNew.DATHANHTOAN = objHOADONXUATKHO.DATHANHTOAN;
                objNew.NGUOITAO = objHOADONXUATKHO.NGUOITAO;
                objNew.NGAYTAOHOADON = objHOADONXUATKHO.NGAYTAOHOADON;
                objNew.ISDELETE = objHOADONXUATKHO.ISDELETE;
                objNew.MAKHACHHANG = objHOADONXUATKHO.MAKHACHHANG;
                objNew.MACA = objHOADONXUATKHO.MACA;
                objNew.isUpdate = true;
                objNew.isLoaded = true;
            }
            return objNew;
        }

        public List<HOADONXUATKHO> Clone(IList<HOADONXUATKHO> listHOADONXUATKHOs)
        {
            List<HOADONXUATKHO> lst = new List<HOADONXUATKHO>();
            if (listHOADONXUATKHOs == null) return lst;
            foreach (var obj in listHOADONXUATKHOs)
            {
                lst.Add(Clone(obj));
            }
            return lst;
        }

        public HOADONXUATKHO getObject(string id)
        {
            return QueryableList().FirstOrDefault(p => p.IDUnit == id);
        }

        public HOADONXUATKHO getObject(Expression<Func<HOADONXUATKHO, bool>> predicate)
        {
            return Queryable().FirstOrDefault(predicate);
        }

        public string GetMaxCode()
        {
            return QueryableList().Max(s => s.IDUnit).ToString();
        }

        public List<HOADONXUATKHO> Search(string textSearch)
        {
            List<HOADONXUATKHO> listIDUnit = QueryableList().Where(p => p.IDUnit == textSearch).ToList();
            if (listIDUnit.Count != 0)
            {
                return listIDUnit;
            }
            else
            {
                listIDUnit = QueryableList().Where(p => p.TextSearchCoDau.Contains(textSearch.Replace(" ", "").ToLower())).ToList();
                return listIDUnit.Count == 0
                ? QueryableList().Where(p => p.TIMKIEM.Contains(textSearch.ToUnsign().Replace(" ", "").ToLower())).ToList()
                : listIDUnit;
            }
        }

        public List<HOADONXUATKHO> Search(Expression<Func<HOADONXUATKHO, bool>> predicate)
        {
            return Queryable().Where(predicate).ToList();
        }

        public List<HOADONXUATKHO> Search(Expression<Func<HOADONXUATKHO, bool>> predicate, string textSearch)
        {
            List<HOADONXUATKHO> listIDUnit = Search(predicate).Where(p => p.IDUnit == textSearch).ToList();
            if (listIDUnit.Count != 0)
            {
                return listIDUnit;
            }
            else
            {
                listIDUnit = Search(predicate).Where(p => p.TextSearchCoDau.Contains(textSearch.Replace(" ", "").ToLower())).ToList();
                return listIDUnit.Count == 0
                ? Search(predicate).Where(p => p.TIMKIEM.Contains(textSearch.ToUnsign().Replace(" ", "").ToLower())).ToList()
                : listIDUnit;
            }
        }
    }
}
