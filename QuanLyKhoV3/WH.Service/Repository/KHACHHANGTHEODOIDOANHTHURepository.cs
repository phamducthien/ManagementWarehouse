//------------------------------------------------------------------------------
// <auto-generated>
// Repository Generated
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using Repository.Pattern.DataContext;
using Repository.Pattern.Ef6;
using Repository.Pattern.Repositories;
using Repository.Pattern.UnitOfWork;
using Util.Pattern;
using WH.Entity;
using System;

namespace WH.Service.Repository
{
    public partial interface IKHACHHANGTHEODOIDOANHTHURepository : IRepositoryAsync<KHACHHANGTHEODOIDOANHTHU>
    {
    	bool Exist(string id);
    	bool Exist(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate);
    	KHACHHANGTHEODOIDOANHTHU getObject(string id);
    	KHACHHANGTHEODOIDOANHTHU getObject(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate);
    	
    
    	KHACHHANGTHEODOIDOANHTHU CreateNew();
    	KHACHHANGTHEODOIDOANHTHU CloneNew(KHACHHANGTHEODOIDOANHTHU objKHACHHANGTHEODOIDOANHTHU);
    	KHACHHANGTHEODOIDOANHTHU CloneUpdate(KHACHHANGTHEODOIDOANHTHU objKHACHHANGTHEODOIDOANHTHU);
    	KHACHHANGTHEODOIDOANHTHU Clone(KHACHHANGTHEODOIDOANHTHU objKHACHHANGTHEODOIDOANHTHU);
    
    	List< KHACHHANGTHEODOIDOANHTHU> Clone(IList<KHACHHANGTHEODOIDOANHTHU> listKHACHHANGTHEODOIDOANHTHUs);
    	string GetMaxCode();
    	List<KHACHHANGTHEODOIDOANHTHU> Search(string textSearch);
    	List<KHACHHANGTHEODOIDOANHTHU> Search(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate);
    	List<KHACHHANGTHEODOIDOANHTHU> Search(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate,string textSearch);
    }
    
    public partial class KHACHHANGTHEODOIDOANHTHURepository : Repository<KHACHHANGTHEODOIDOANHTHU>, IKHACHHANGTHEODOIDOANHTHURepository
    {
    	public string DefaultCode
        {
    		get { return null; }
        }
    
        public KHACHHANGTHEODOIDOANHTHURepository(IDataContextAsync context, IUnitOfWorkAsync unitOfWork) : base(context, unitOfWork)
        {
        }
    
        public KHACHHANGTHEODOIDOANHTHURepository(IUnitOfWorkAsync unitOfWork)
                : base(unitOfWork)
        {
        }
    
    	public bool Exist(string id)
        {
    		return QueryableList().Any(p => p.IDUnit == id);
        }
    
    	public bool Exist(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate)
    	{
    		return Queryable().Any(predicate);
    	}
    
    	public KHACHHANGTHEODOIDOANHTHU CreateNew()
        {
    		
    		KHACHHANGTHEODOIDOANHTHU _obj = Create();
    
    				//_obj.KHACHHANG = null;//object
    		_obj.MAKHACHHANG = Guid.Empty;//System.Guid
    									_obj.THEODOI = null;//Nullable<bool>
    									_obj.NGUOICAPNHAT = string.Empty;//string
    			        return _obj;
        }
    
    	public KHACHHANGTHEODOIDOANHTHU CloneNew(KHACHHANGTHEODOIDOANHTHU objKHACHHANGTHEODOIDOANHTHU)
    	{
    		if(objKHACHHANGTHEODOIDOANHTHU==null) return null;
    			 KHACHHANGTHEODOIDOANHTHU objNew = Find(objKHACHHANGTHEODOIDOANHTHU.MAKHACHHANG,objKHACHHANGTHEODOIDOANHTHU.NAM);
    			if(objNew !=null) return null;
    
    		 objNew =  CreateNew();
    		 				objNew.MAKHACHHANG =  objKHACHHANGTHEODOIDOANHTHU.MAKHACHHANG;
    								objNew.NAM =  objKHACHHANGTHEODOIDOANHTHU.NAM;
    								objNew.THANG1 =  objKHACHHANGTHEODOIDOANHTHU.THANG1;
    								objNew.THANG2 =  objKHACHHANGTHEODOIDOANHTHU.THANG2;
    								objNew.THANG3 =  objKHACHHANGTHEODOIDOANHTHU.THANG3;
    								objNew.THANG4 =  objKHACHHANGTHEODOIDOANHTHU.THANG4;
    								objNew.THANG5 =  objKHACHHANGTHEODOIDOANHTHU.THANG5;
    								objNew.THANG6 =  objKHACHHANGTHEODOIDOANHTHU.THANG6;
    								objNew.THANG7 =  objKHACHHANGTHEODOIDOANHTHU.THANG7;
    								objNew.THANG8 =  objKHACHHANGTHEODOIDOANHTHU.THANG8;
    								objNew.THANG9 =  objKHACHHANGTHEODOIDOANHTHU.THANG9;
    								objNew.THANG10 =  objKHACHHANGTHEODOIDOANHTHU.THANG10;
    								objNew.THANG11 =  objKHACHHANGTHEODOIDOANHTHU.THANG11;
    								objNew.THANG12 =  objKHACHHANGTHEODOIDOANHTHU.THANG12;
    								objNew.THEODOI =  objKHACHHANGTHEODOIDOANHTHU.THEODOI;
    								objNew.NGUOICAPNHAT =  objKHACHHANGTHEODOIDOANHTHU.NGUOICAPNHAT;
    						  objNew.isAdd = true;
    		 return objNew;
    	}
    
    	public KHACHHANGTHEODOIDOANHTHU CloneUpdate(KHACHHANGTHEODOIDOANHTHU objKHACHHANGTHEODOIDOANHTHU)
    	{
    		if(objKHACHHANGTHEODOIDOANHTHU==null) return null;
    		 KHACHHANGTHEODOIDOANHTHU objNew = Find(objKHACHHANGTHEODOIDOANHTHU.MAKHACHHANG,objKHACHHANGTHEODOIDOANHTHU.NAM);
    		 if(objNew==null) return null;
    		 				objNew.MAKHACHHANG =  objKHACHHANGTHEODOIDOANHTHU.MAKHACHHANG;
    								objNew.NAM =  objKHACHHANGTHEODOIDOANHTHU.NAM;
    								objNew.THANG1 =  objKHACHHANGTHEODOIDOANHTHU.THANG1;
    								objNew.THANG2 =  objKHACHHANGTHEODOIDOANHTHU.THANG2;
    								objNew.THANG3 =  objKHACHHANGTHEODOIDOANHTHU.THANG3;
    								objNew.THANG4 =  objKHACHHANGTHEODOIDOANHTHU.THANG4;
    								objNew.THANG5 =  objKHACHHANGTHEODOIDOANHTHU.THANG5;
    								objNew.THANG6 =  objKHACHHANGTHEODOIDOANHTHU.THANG6;
    								objNew.THANG7 =  objKHACHHANGTHEODOIDOANHTHU.THANG7;
    								objNew.THANG8 =  objKHACHHANGTHEODOIDOANHTHU.THANG8;
    								objNew.THANG9 =  objKHACHHANGTHEODOIDOANHTHU.THANG9;
    								objNew.THANG10 =  objKHACHHANGTHEODOIDOANHTHU.THANG10;
    								objNew.THANG11 =  objKHACHHANGTHEODOIDOANHTHU.THANG11;
    								objNew.THANG12 =  objKHACHHANGTHEODOIDOANHTHU.THANG12;
    								objNew.THEODOI =  objKHACHHANGTHEODOIDOANHTHU.THEODOI;
    								objNew.NGUOICAPNHAT =  objKHACHHANGTHEODOIDOANHTHU.NGUOICAPNHAT;
    						 objNew.isUpdate = true;
    		 return objNew;
    	}
    	public KHACHHANGTHEODOIDOANHTHU Clone(KHACHHANGTHEODOIDOANHTHU objKHACHHANGTHEODOIDOANHTHU)
    	{
    		if(objKHACHHANGTHEODOIDOANHTHU==null) return null;
    		 KHACHHANGTHEODOIDOANHTHU objNew = Find(objKHACHHANGTHEODOIDOANHTHU.MAKHACHHANG,objKHACHHANGTHEODOIDOANHTHU.NAM);
    		 if(objNew==null) 
    		 {
    		 objNew =  CreateNew();
    		 				objNew.MAKHACHHANG =  objKHACHHANGTHEODOIDOANHTHU.MAKHACHHANG;
    								objNew.NAM =  objKHACHHANGTHEODOIDOANHTHU.NAM;
    								objNew.THANG1 =  objKHACHHANGTHEODOIDOANHTHU.THANG1;
    								objNew.THANG2 =  objKHACHHANGTHEODOIDOANHTHU.THANG2;
    								objNew.THANG3 =  objKHACHHANGTHEODOIDOANHTHU.THANG3;
    								objNew.THANG4 =  objKHACHHANGTHEODOIDOANHTHU.THANG4;
    								objNew.THANG5 =  objKHACHHANGTHEODOIDOANHTHU.THANG5;
    								objNew.THANG6 =  objKHACHHANGTHEODOIDOANHTHU.THANG6;
    								objNew.THANG7 =  objKHACHHANGTHEODOIDOANHTHU.THANG7;
    								objNew.THANG8 =  objKHACHHANGTHEODOIDOANHTHU.THANG8;
    								objNew.THANG9 =  objKHACHHANGTHEODOIDOANHTHU.THANG9;
    								objNew.THANG10 =  objKHACHHANGTHEODOIDOANHTHU.THANG10;
    								objNew.THANG11 =  objKHACHHANGTHEODOIDOANHTHU.THANG11;
    								objNew.THANG12 =  objKHACHHANGTHEODOIDOANHTHU.THANG12;
    								objNew.THEODOI =  objKHACHHANGTHEODOIDOANHTHU.THEODOI;
    								objNew.NGUOICAPNHAT =  objKHACHHANGTHEODOIDOANHTHU.NGUOICAPNHAT;
    						  objNew.isAdd = true;
    		 }
    		 else
    		 {
    		 				objNew.THANG1 =  objKHACHHANGTHEODOIDOANHTHU.THANG1;
    								objNew.THANG2 =  objKHACHHANGTHEODOIDOANHTHU.THANG2;
    								objNew.THANG3 =  objKHACHHANGTHEODOIDOANHTHU.THANG3;
    								objNew.THANG4 =  objKHACHHANGTHEODOIDOANHTHU.THANG4;
    								objNew.THANG5 =  objKHACHHANGTHEODOIDOANHTHU.THANG5;
    								objNew.THANG6 =  objKHACHHANGTHEODOIDOANHTHU.THANG6;
    								objNew.THANG7 =  objKHACHHANGTHEODOIDOANHTHU.THANG7;
    								objNew.THANG8 =  objKHACHHANGTHEODOIDOANHTHU.THANG8;
    								objNew.THANG9 =  objKHACHHANGTHEODOIDOANHTHU.THANG9;
    								objNew.THANG10 =  objKHACHHANGTHEODOIDOANHTHU.THANG10;
    								objNew.THANG11 =  objKHACHHANGTHEODOIDOANHTHU.THANG11;
    								objNew.THANG12 =  objKHACHHANGTHEODOIDOANHTHU.THANG12;
    								objNew.THEODOI =  objKHACHHANGTHEODOIDOANHTHU.THEODOI;
    								objNew.NGUOICAPNHAT =  objKHACHHANGTHEODOIDOANHTHU.NGUOICAPNHAT;
    						 objNew.isUpdate = true;
    		  objNew.isLoaded = true;
    		 }
    		 return objNew;
    	}
    
    	public List< KHACHHANGTHEODOIDOANHTHU> Clone(IList<KHACHHANGTHEODOIDOANHTHU> listKHACHHANGTHEODOIDOANHTHUs)
    	{
    		List< KHACHHANGTHEODOIDOANHTHU> lst = new List< KHACHHANGTHEODOIDOANHTHU>();
    		if(listKHACHHANGTHEODOIDOANHTHUs == null) return lst;
    		foreach(var obj in  listKHACHHANGTHEODOIDOANHTHUs)
    		{
    			 lst.Add(Clone(obj));
    		}
    		return lst;
    	}
    
    	public KHACHHANGTHEODOIDOANHTHU getObject(string id)
    	{
    		return QueryableList().FirstOrDefault(p => p.IDUnit == id);
    	}
    
    	public KHACHHANGTHEODOIDOANHTHU getObject(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate)
    	{
    		return  Queryable().FirstOrDefault(predicate);
    	}
    
    	 public string GetMaxCode()
         {
    		return QueryableList().Max(s=>s.IDUnit).ToString();
         }
    
    	 public List<KHACHHANGTHEODOIDOANHTHU> Search(string textSearch)
    	 {
    		List<KHACHHANGTHEODOIDOANHTHU> listIDUnit = QueryableList().Where(p=>p.IDUnit == textSearch).ToList();
    		if (listIDUnit.Count != 0)
    		{
        		return listIDUnit;
    		}
    		else
    		{
        		listIDUnit = QueryableList().Where(p => p.TextSearchCoDau.Contains(textSearch.Replace(" ", "").ToLower())).ToList();
        		return listIDUnit.Count == 0
        		? QueryableList().Where(p => p.TIMKIEM.Contains(textSearch.ToUnsign().Replace(" ", "").ToLower())).ToList()
        		: listIDUnit;
    		}
    	 }
    
    	public List<KHACHHANGTHEODOIDOANHTHU> Search(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate)
    	{
    		return  Queryable().Where(predicate).ToList();
    	}
    
    	public List<KHACHHANGTHEODOIDOANHTHU> Search(Expression<Func<KHACHHANGTHEODOIDOANHTHU, bool>> predicate,string textSearch)
    	{
    			List<KHACHHANGTHEODOIDOANHTHU> listIDUnit = Search(predicate).Where(p => p.IDUnit == textSearch).ToList();
                if (listIDUnit.Count != 0)
                {
                    return listIDUnit;
                }
                else
                {
                    listIDUnit = Search(predicate).Where(p => p.TextSearchCoDau.Contains(textSearch.Replace(" ", "").ToLower())).ToList();
                    return listIDUnit.Count == 0
                    ? Search(predicate).Where(p => p.TIMKIEM.Contains(textSearch.ToUnsign().Replace(" ", "").ToLower())).ToList()
                    : listIDUnit;
                }
    	}
    }
}
