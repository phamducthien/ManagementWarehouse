<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="CheckSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="kryptonLabel1.Values.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>